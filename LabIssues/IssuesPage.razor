@page "/{OrganizationId}/issues/{IssueId?}"
@inherits OrganizationComponentBase

@inject IssuesService IssuesService

@* Issues header *@
<div class="d-flex">
    <InteractiveButton Caption="New issue" 
                       CssIcon="bi bi-plus-circle"
                       OnClick="@_onNewIssue">
        
    </InteractiveButton>
    
    <SearchBar Placeholder="Search issues (by user, description, date, status...)" 
               RequestSearch="@_onSearch"/>
</div>

<div class="container-fluid">
    @* Render issues *@
    <div class="row">
        @foreach (var issue in _issues)
        {
            <IssueView Issue="@issue"/>
        }
    </div>
</div>

@code {
    
    [Parameter] public string? IssueId { get; set; }
    
    private List<Issue> _issues = new();
    private Issue? _selectedIssue = null!;

    protected override async Task OnParametersSetAsync()
    {
        // Load issues and then select issue, if given by param
        _issues = (await IssuesService.GetItems()).ToList();
    }

    private Task _onSearch((string, CancellationToken) searchRequest)
    {
        throw new NotImplementedException();
    }

    private Task _onNewIssue()
    {
        throw new NotImplementedException();
    }

}