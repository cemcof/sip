using Microsoft.EntityFrameworkCore.Metadata.Builders;
using sip.Userman;

namespace sip.Messaging;

public enum MessageType
{
    /// <summary>
    /// A message that is generated by the system and sent to the users.
    /// </summary>
    SystemOut,
    /// <summary>
    /// Message that was received from a user
    /// </summary>
    UserIn, 
    /// <summary>
    /// Message that was sent out to the users, but not generated by the system
    /// Instead, some other message was forwarded directly. 
    /// </summary>
    UserOutForward
}

public enum MessageStatus
{
    Pending, Handled
}

public class Message
{
    public Guid Id { get; set; }

    public string MessageId { get; set; } = string.Empty;
    /// <summary>
    /// Headers of the message, without the message body.
    /// Message body is stored as separate entity so it is not automatically loaded - that could
    /// potentially consume large amount of memory in cases where messages are big.
    /// </summary>
    public string MimeHeaders { get; set; } = string.Empty;

    /// <summary>
    /// Date time of the message, when it was sent/received
    /// </summary>
    public DateTime DtCreated { get; set; }

    public DateTime DtStatusChanged { get; set; }

    public MessageStatus MessageStatus { get; set; }

    /// <summary>
    /// Subject of the message, without any specifiers or artifacts like Re: etc.
    /// </summary>
    public string Subject { get; set; } = string.Empty;

    public MessageType MessageType { get; set; }

    /// <summary>
    /// Id of the message that this message is response to
    /// </summary>
    public Guid? InResponseToId { get; set; }
    public Message? InResponseTo { get; set; }


    public Guid? SenderId { get; set; }
    public AppUser? Sender { get; set; }
    public List<MessageRecipient> Recipients { get; set; } = new();

    public Guid MessageDataId { get; set; }
    public MessageData MessageData { get; set; } = null!;

    public bool SubjectMatch(string substr)
    {
        return Subject.ToLower().Contains(substr.ToLower());
    }
}

public class MessageBaseEntityConfig : IEntityTypeConfiguration<Message>
{
    public void Configure(EntityTypeBuilder<Message> builder)
    {
        builder.Property(p => p.MessageType)
            .HasConversion<string>();
        
    }
}