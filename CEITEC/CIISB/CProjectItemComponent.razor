<div class="project-item attention-@DetermineClass().ToString().ToLower()">
    
    <div class="left">@Project.Id - @Project.Acronym</div> <div class="small right">@GetNamePart()</div>
    
</div>

@code {

    [Parameter, EditorRequired]
    public CProject Project { get; set; } = null!;

    [Parameter]
    public AppUser User { get; set; } = null!;

    private AttentionLevel DetermineClass()
    {
        if (Project.InStatusAll<ProjectFinished>()) return AttentionLevel.Irrelevant;
        
        // This user is responsible for project in given organizations
        // By default, CF head is responsible
        var responsibleInOrgs = Project.Organizations.Where(o => User.IsInRole<CfHeadRole>(o)).Distinct();
        // However, if one or more responsible people are assigned for the organizations, CF head is not necesarily responsible
        responsibleInOrgs = responsibleInOrgs.Where(org => !Project.AnyMember<ResponsibleMember>(org) || Project.IsMember<ResponsibleMember>(User, org)).ToList();
        
        // Project is finished for all of the user's responsible organizations
        if (Project.InStatusAll<ServiceFinished>(responsibleInOrgs))
            return AttentionLevel.Irrelevant;
        
        // Project is in progress in some of the user's organization
        if (Project.InStatusAny<ServiceInProgress>(responsibleInOrgs))
            return AttentionLevel.Important;
        
        // Project is waiting for technical feasiblilty in one of user's organization
        // Or project is waiting for peer-review request in one of user's responsible organizations
        if (Project.GetOrgsInStatus<WaitingForTechnicalFeasibility>().Intersect(responsibleInOrgs).Any() || 
            Project.GetOrgsInStatus<WaitingForPeerReviewRequest>().Intersect(responsibleInOrgs).Any() )
            return AttentionLevel.Urgent;
        
               
        return AttentionLevel.Standard;
    }

    public string GetNamePart() =>
        (Project.Applicant.Equals(Project.Principal)) ? Project.Applicant.Lastname ?? string.Empty : $"{Project.Applicant.Lastname}/{Project.Principal.Lastname}";

}