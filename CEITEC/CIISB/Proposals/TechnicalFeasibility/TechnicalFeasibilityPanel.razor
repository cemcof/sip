<div class="document-panel pstate-@TechnicalFeasiblility.ProposalState @TechnicalFeasiblility prstatus-@TechnicalFeasiblility.Result">
    
    <div class="heading">
        Technical feasilibilty - @TechnicalFeasiblility.Organization?.Abbreviation
    </div>
    
    <div class="body">
        
        @* @if (!TechnicalFeasiblility.IsEvaluated && Project.InStatusAll<TechnicalFeasiblilityRequest>()) *@
        @* { *@
        @*     // Peer review is not evaluated and is waiting for request *@
        @*      *@
        @*     // Is this guy the guy that can send peer review request?   *@
        @*     @if (CurrentUser.IsInRole<Peerreviewer>()) *@
        @*      *@
        @*      *@
        @* } *@
        @* else if (!TechnicalFeasiblility.IsEvaluated && Project.InStatusAll<TechnicalFeasiblility>()) *@
        @* { *@
        @*     // Peer review is evaluated *@
        @*      *@
        @*      *@
        @* } *@
        @* *@
        @* @if (TechnicalFeasiblility.ExpectedEvaluator is null) *@
        @* { *@
        @*     // Selecting peer reviewer *@
        @* } *@
        @* else *@
        @* { *@
        @*      *@
        @* } *@
        
    </div>
    
</div>


@code {

    public enum TechEvalRenderState
    {
        ShouldBeEvaluated, 
        UnevaluatedButIrrelevant,  
        
    }

    // public bool IsRelevant => Project.InStatusAll<>()
    
    [Parameter, EditorRequired]
    public TechnicalFeasiblility TechnicalFeasiblility { get; set; } = null!;
    
    [Parameter, EditorRequired]
    public Project Project { get; set; } = null!;
    
    [Parameter, EditorRequired]
    public AppUser CurrentUser { get; set; } = null!;
    
    [Parameter]
    public EventCallback OnRefresh { get; set; }
    
    [Parameter]
    public EventCallback OnSelect { get; set; }

    protected override void OnParametersSet()
    {
        ArgumentNullException.ThrowIfNull(TechnicalFeasiblility, nameof(TechnicalFeasiblility));
        ArgumentNullException.ThrowIfNull(Project, nameof(Project));
        ArgumentNullException.ThrowIfNull(CurrentUser, nameof(CurrentUser));
    }

}