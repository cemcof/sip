@using sip.Forms

@* Diagram if any  *@
@if (!string.IsNullOrEmpty(Workflow.Diagram))
{
    <div class="wf-diagram">
        <img src="@Workflow.Diagram" alt="@Workflow.Title"/>
    </div>
}

@* Description if any *@
@if (!string.IsNullOrEmpty(Workflow.Description))
{
    <div class="text-center small">
        @Workflow.Description
    </div>
}


<div class="wf-prot-properties">
    @if (AsForm)
    {
        <CEditForm TModelType="WorkflowGeneralRenderer" Model="@(this)" FormFooter="@(CEditForm<WorkflowGeneralRenderer>.EmptyFooter)" Context="ctxx">
            <InputAligner Flex="0 0 40%, 1, 0 0 20%">
                @foreach (var group in InspectResult.ToGroups())
                {
                    @if (!string.IsNullOrWhiteSpace(group.Name))
                    {
                        <div class="wf-protocol-headline">
                            <div class="fw-bold">@group.Name</div>
                            <small>@group.Description</small>
                        </div>
                    }

                    @foreach (var prop in group.Elements)
                    {
                        <DynamicFormElement Setup="@prop.Item1" BindPoint="@prop.Item2"/>
                    }

                }

            </InputAligner>
        </CEditForm>
    }
    else
    {
        @foreach (var group in InspectResult.ToGroups())
        {
            @if (!string.IsNullOrWhiteSpace(group.Name))
            {
                <div class="wf-protocol-headline">
                    <div class="fw-bold">@group.Name</div>
                    <small>@group.Description</small>
                </div>
            }

            @foreach (var prop in group.Elements)
            {
                <DynamicProperty Setup="@prop.Item1" BindPoint="@prop.Item2"/>
            }

        }
    }

</div>

@code {

    
    [Parameter, EditorRequired]
    public Workflow Workflow { get; set; } = null!;

    [Parameter, EditorRequired] public DynamicFormTools.InspectResult InspectResult { get; set; } = null;

    [Parameter] public bool AsForm { get; set; } = true;

}